name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install musl-tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- -y --profile minimal --default-toolchain stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install musl target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build
        run: cargo build --release

      - name: Upload client-hw-info binary
        uses: actions/upload-artifact@v4
        with:
          name: client-hw-info-artifact
          path: target/x86_64-unknown-linux-musl/release/client-hw-info

  smoke:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        base:
          - ubuntu:24.04
          - ubuntu:22.04
          - ubuntu:20.04
          - debian:12
          - debian:13
          - almalinux:10
          - almalinux:9
          - rockylinux:9
          - opensuse/leap:15.6


    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: client-hw-info-artifact
      - name: Make binary executable
        run: chmod +x client-hw-info
      - name: Run smoke on ${{ matrix.base }}
        run: |
          set -o pipefail
          if docker run --rm \
                -v "$PWD/client-hw-info:/client-hw-info" \
                -w / \
                "${{ matrix.base }}" \
                ./client-hw-info --skip-heartbeat 2>&1 1>/dev/null \
             | tee /dev/stderr \
             | grep -q "ERROR"
          then
            echo "stderr contains 'ERROR' â†’ Build fail" >&2
            exit 1
          fi
        
      
        

